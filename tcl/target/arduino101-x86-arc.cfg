## arduino101 arc and x86 cores accessible via the jtag header.

adapter_khz 4000

reset_config trst_only

source [find cpu/arc/em.tcl]

jtag newtap curie bs    -irlen 6  -irmask 0x3f  -expected-id   0xffffffff  -disable		
jtag newtap curie arc   -irlen 4  -irmask 0xf   -expected-id   0x200044b1  -disable		
jtag newtap curie lmt   -irlen 8  -irmask 0xff  -expected-id   0x38289013  -disable
jtag newtap curie cltap -irlen 8  -irmask 0xff  -expected-id   0x0e765013  -enable

## need to push bits into the cltap to enable the cpu tap

proc curie_setup {} {
	echo "enabling taps"

	poll off

	irscan curie.cltap 0x11 -endstate IRPAUSE
	drscan curie.cltap 12 0x15  -endstate RUN/IDLE
	## spin for a bit.. 
	runtest 10
	
	jtag tapenable curie.lmt
	jtag tapenable curie.arc
	jtag tapenable curie.bs

	## check to see what we got
	
	irscan curie.cltap  0x2
	set curr_idcode [drscan curie.cltap 32 0]
	echo "IDCODE CLTAP $curr_idcode"
	
	irscan curie.lmt  0x2
	set curr_idcode [drscan curie.lmt 32 0]
	echo "IDCODE LMT   $curr_idcode"
	
	irscan curie.arc  0xc
	set curr_idcode [drscan curie.arc 32 0]
	echo "IDCODE ARC  $curr_idcode"

	# no idcode on the final (boundary scan?) tap
}

proc lmt-enable {} {
	echo "lmt-enable"
}

proc arc-enable {} {
	echo "arc-enable"
}

proc bs-enable {} {
	echo "bs-enable"
}

## there's a lakemont quark cpu at chain pos curie.lmt

target create curie.lmt quark_d20xx -endian little -chain-position curie.lmt

# this is from the sysnopsys example on github.
# it's unclear if it's actually relevant here..
set _coreid 0
set _dbgbase [expr 0x00000000 | ($_coreid << 13)]

# there's an ARCv2EM core at chain pos curie.arc

target create curie.arc arcv2 -chain-position curie.arc \
  -coreid 0 -dbgbase $_dbgbase -endian little

# There is no SRST, so do a software reset

curie.arc configure -event reset-assert "arc_em_reset curie.arc"
arc_em_init_regs

jtag configure curie.lmt -event tap-enable "lmt-enable"
jtag configure curie.arc -event tap-enable "arc-enable"
jtag configure curie.bs -event tap-enable "bs-enable"

jtag configure curie.cltap -event setup { curie_setup }

## stop on gdb connect
curie.lmt configure -event gdb-attach { halt }

curie.lmt configure -event reset-start {
	# need to halt the target to write to memory
#	if {[curie.lmt curstate] ne "halted"} { halt }
	# set resetbreak via the core tap
#	irscan curie.lmt 0x35 ; drscan curie.lmt 1 0x1
	# trigger a warm reset
#	mww 0xb0800570 0x2
	# clear resetbreak
#	irscan curie.lmt 0x35 ; drscan curie.lmt 1 0x0
}



